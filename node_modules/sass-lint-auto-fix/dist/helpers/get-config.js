"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const merge = require('merge');
const path = require('path');
const fs = require('fs');
const yaml = require('js-yaml');
const _configurationProxy = new Proxy({
    yml: parseYaml,
    yaml: parseYaml,
    json: parseJSON,
    ['*']: parseModule,
}, {
    get: (target, filename) => {
        const possibleResolutions = Object.keys(target)
            .map(key => target[key](filename))
            .filter(result => result !== null);
        if (possibleResolutions.length === 0) {
            throw Error(`ParseError - Unable to parse configuration file ${filename}`);
        }
        return possibleResolutions[0];
    },
});
function parseYaml(filename) {
    try {
        return yaml.safeLoad(fs.readFileSync(filename).toString());
    }
    catch (e) {
        return null;
    }
}
function parseJSON(filename) {
    try {
        const file = fs.readFileSync(filename).toString();
        return JSON.parse(file);
    }
    catch (e) {
        return null;
    }
}
function parseModule(filename) {
    try {
        return require(path.resolve(filename));
    }
    catch (e) {
        return null;
    }
}
exports.getConfig = (filename) => _configurationProxy[filename];
exports.mergeConfig = (baseConfig, extendedConfig) => merge.recursive(true, baseConfig, extendedConfig);
